@model JSONUtils.Query

@{
    ViewBag.Title = "PizzaEats";
}
<br />

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @using (Html.BeginForm())
    {

        <div class="row">
            <h1>Please Choose Pizza Size:</h1>
            <div class="col-md-4">
                

                <label>@Html.RadioButton("Size", "Small",true) Small</label>
                <br />

                <label>@Html.RadioButton("Size", "Medium") Medium</label>
                <br />

                <label>@Html.RadioButton("Size", "Large") large </label>
                <br />
                <input type="button" onclick="CheckSelected()" value="continue">
                @section Scripts{
                    <script type="text/javascript">
                        function CheckSelected() {
                            var selected = $("input[name='Size']:checked").val();
                            var selectedTopping = $("input[name='Topping']:checked").val();
                            var selectedTopping2 = $("input[name='Topping2']:checked").val();
                            var selectedTopping3 = $("input[name='Topping3']:checked").val();
                            alert("size: " + selected + " topping: " + selectedTopping+" "+ selectedTopping2+" " + selectedTopping3);
                        }
                        $(document).ready(function () {
                        });
                    </script>
                            }
            </div>
        </div>
        <div class="row">
            <h1>Please Choose one or more Topping:</h1>


            <div class="col-md-4">
                <h1>Cheese Topping:</h1>

                <label>@Html.RadioButton("Topping", "Blue Cheese") Blue Cheese</label>
                <br />
                <label>@Html.RadioButton("Topping", "Feta") Feta </label>
                <br />
                <label>@Html.RadioButton("Topping", "Pepper Jack") Pepper Jack</label>
                <br />
                <label>@Html.RadioButton("Toppin", "Mozzarella") Mozzarella</label>
                <br />

            </div>
            <div class="col-md-4">
                <h1>Meat Topping:</h1>

                <label>@Html.RadioButton("Topping2", "Chicken") Chicken</label>
                <br />
                <label>@Html.RadioButton("Topping2", "Turkey") Turkey </label>
                <br />
                <label>@Html.RadioButton("Topping2", "Shrimp") Shrimp </label>
                <br />
                <label>@Html.RadioButton("Topping2", "Steak") Steak </label>
                <br />
                <label>@Html.RadioButton("Topping2", "Lamb") Lamb </label>
                <br />
            </div>
            <div class="col-md-4">
                <h1>Vegetable Topping:</h1>

                <label>@Html.RadioButton("Topping3", "Olives") Olives</label>
                <br />
                <label>@Html.RadioButton("Topping3", "Peppers") Peppers </label>
                <br />
                <label>@Html.RadioButton("Topping3", "Mushrooms") Mushrooms </label>
                <br />
                <label>@Html.RadioButton("Topping3", "Spinach") Spinach </label>
                <br />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.TextBox("String",null,
               new { style = "width: 900px;" }) <input type="submit" value="Enter" id="txt" />


            </div>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.Size,
       htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Size,
           new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Topping,
       htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Topping,
           new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Topping2,
       htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Topping2,
           new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Topping3,
       htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Topping3,
           new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Number,
       htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Number,
           new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    @if (Model.NoSize)
    {
        @Html.ActionLink("EnterSize", "Size")
    }
    @if (Model.NoNumber)
    {
        @Html.Label("Please Enter Amount")
    }
    @if (Model.NoTopping)
    {
        @Html.ActionLink("EnterTopping", "Topping")
    }
</div>
